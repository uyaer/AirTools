<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 width="462" height="300" initialize="init(event)">
	<s:layout>
		<s:BasicLayout/>
	</s:layout>
	<fx:Script>
		<![CDATA[
			import flash.globalization.StringTools;
			
			import mx.controls.Alert;
			import mx.events.FlexEvent;
			import mx.utils.StringUtil;
			
			private var inURL:String;
			private var exportURL:String;
			protected function init(event:FlexEvent):void
			{
				this.loadCfg();				
			}
			private function loadCfg():void
			{
				var share:SharedObject = SharedObject.getLocal("encrypt-js-file_path");
				inURL = share.data.in_path;
				
				this.debugShow();
				
				share.close();
			}
			
			private function saveCfg():void
			{
				var share:SharedObject = SharedObject.getLocal("encrypt-js-file_path");
				share.data.in_path = inURL;
				
				share.flush();
				share.close();
			}
			
			private function debugShow():void
			{
				stateTF.text = "in: "+this.inURL;
			}
			protected function selectBtn_clickHandler(e:MouseEvent):void
			{
				var file:File = new File(inURL);
				file.addEventListener(Event.SELECT,onSelect);
				file.browseForDirectory("选择打包文件");
			}
			
			private function onSelect(e:Event):void{
				var file:File = e.currentTarget as File;
				this.inURL = this.exportURL = file.nativePath;
				this.saveCfg();
				this.debugShow();
			}
			
			private function encryptJs():void
			{
				var outFile:File = new File(inURL).resolvePath("game.min.js");
				var file:File = new File(inURL).resolvePath("main.min.js");
				
				//读取数据
				var stream:FileStream = new FileStream();
				stream.open(file,FileMode.READ);
				var dataStr:String = stream.readUTFBytes(file.size);
				stream.close();
				file.deleteFile();
				
				//写入buffer
				var codeArr:Array=[];
				var buffer:ByteArray = new ByteArray();
				var len:Number = dataStr.length;
				var index:Number = 0;
				var isCN:Boolean = false;
				while(index<len){
					var code:Number = dataStr.charCodeAt(index);
					if(code<255){
						if(isCN){
							buffer.writeByte(0);
							codeArr.push(0);
						}
						code--;
						buffer.writeByte(code);
						codeArr.push(code);
						isCN = false;
					}else{
						if(!isCN){
							buffer.writeByte(0);
							codeArr.push(0);
						}
						buffer.writeShort(code);
						codeArr.push(0);
						isCN = true;
					}
					index++;
				}
				
				//	写入			
				stream.open(outFile,FileMode.WRITE);
				stream.writeBytes(buffer);
				stream.close();
				
				this.stateTF.text = codeArr.toString();
				buffer.clear();
			}
			/**
			 * 更新index.html文件
			 */ 
			private function updatIndexHtml():void{
				//删除以前的代码
				var file:File = new File(inURL).resolvePath("index.html");
				var stream:FileStream = new FileStream();
				stream.open(file,FileMode.READ);
				var dataStr:String = stream.readUTFBytes(file.size);
				stream.close();
//				dataStr= dataStr.replace(/\s+/gm," ");
				dataStr= dataStr.replace('<script src="main.min.js"></script>',"");
				dataStr= dataStr.replace('egret.runEgret();',"");
				//	写入			
				stream.open(file,FileMode.WRITE);
				stream.writeUTFBytes(dataStr);
				stream.close();
			}
			
			protected function mergeBtn_clickHandler(e:MouseEvent):void
			{
				if(!inURL){
					Alert.show("没有选择输入目录","",4,this);
					return;
				}
				this.encryptJs();
				this.updatIndexHtml();
				
				Alert.show("加密成功！","",4,this);
			}
			
		]]>
	</fx:Script>
	
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>
	<s:Button id="selectDestBtn" x="29" y="27" height="26" label="选择文件目录"
			  click="selectBtn_clickHandler(event)"/>
	<s:Button id="encryptBtn" x="135" y="173" width="78" height="27" label="加密"
			  click="mergeBtn_clickHandler(event)"/>
	<s:TextArea id="stateTF" x="28" y="66" width="244" height="78"/>
</s:Group>
